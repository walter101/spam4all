# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            #######################################################################
            # Configure a service in a variable
            # Used to pass this service in any other service by injecting this variable as argument #
            #######################################################################
            $markdownLogger: '@monolog.logger.markdown'
            #######################################################################
            # Configure loggers with specific channels #
            #######################################################################
            $moviedatabaseLogger: '@monolog.logger.moviedatabase'
            $apiCallLogger: '@monolog.logger.api_call_logging'
            #######################################################################
            # Configure some global variables who will deliver envars to services #
            #######################################################################
            $isApiCallActive: '%env(IS_API_CALL_ACTIVE)%'
            $apiKey: '%env(API_KEY)%'
            $isDebug: '%kernel.environment%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

